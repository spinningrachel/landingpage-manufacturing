/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Webflow from "../../../../../index";
export declare namespace Comments {
    interface Options {
        environment?: core.Supplier<environments.WebflowEnvironment | environments.WebflowEnvironmentUrls>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        accessToken: core.Supplier<core.BearerToken>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class Comments {
    protected readonly _options: Comments.Options;
    constructor(_options: Comments.Options);
    /**
     * List all comment threads for a site.
     *
     * <Note title="Timing of comment threads">
     *   There may be a delay of up to 5 minutes before new comments appear in the system.
     * </Note>
     *
     * Required scope | `comments:read`
     *
     * @param {string} siteId - Unique identifier for a Site
     * @param {Webflow.sites.CommentsListCommentThreadsRequest} request
     * @param {Comments.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.sites.comments.listCommentThreads("580e63e98c9a982ac9b8b741", {
     *         localeId: "65427cf400e02b306eaa04a0"
     *     })
     */
    listCommentThreads(siteId: string, request?: Webflow.sites.CommentsListCommentThreadsRequest, requestOptions?: Comments.RequestOptions): core.HttpResponsePromise<Webflow.CommentThreadList>;
    private __listCommentThreads;
    /**
     * Get details of a specific comment thread.
     *
     *   <Note title="Timing of comment threads">
     *     There may be a delay of up to 5 minutes before new comments appear in the system.
     *   </Note>
     *
     * Required scope | `comments:read`
     *
     * @param {string} siteId - Unique identifier for a Site
     * @param {string} commentThreadId - Unique identifier for a Comment Thread
     * @param {Webflow.sites.CommentsGetCommentThreadRequest} request
     * @param {Comments.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.sites.comments.getCommentThread("580e63e98c9a982ac9b8b741", "580e63e98c9a982ac9b8b741", {
     *         localeId: "65427cf400e02b306eaa04a0"
     *     })
     */
    getCommentThread(siteId: string, commentThreadId: string, request?: Webflow.sites.CommentsGetCommentThreadRequest, requestOptions?: Comments.RequestOptions): core.HttpResponsePromise<Webflow.CommentThread>;
    private __getCommentThread;
    /**
     * List all replies to a specific comment thread.
     *
     * <Note title="Timing of comment threads">
     *   There may be a delay of up to 5 minutes before new comments appear in the system.
     * </Note>
     *
     * Required scope | `comments:read`
     *
     * @param {string} siteId - Unique identifier for a Site
     * @param {string} commentThreadId - Unique identifier for a Comment Thread
     * @param {Webflow.sites.CommentsListCommentRepliesRequest} request
     * @param {Comments.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.sites.comments.listCommentReplies("580e63e98c9a982ac9b8b741", "580e63e98c9a982ac9b8b741", {
     *         localeId: "65427cf400e02b306eaa04a0"
     *     })
     */
    listCommentReplies(siteId: string, commentThreadId: string, request?: Webflow.sites.CommentsListCommentRepliesRequest, requestOptions?: Comments.RequestOptions): core.HttpResponsePromise<Webflow.CommentReplyList>;
    private __listCommentReplies;
    protected _getAuthorizationHeader(): Promise<string>;
}
