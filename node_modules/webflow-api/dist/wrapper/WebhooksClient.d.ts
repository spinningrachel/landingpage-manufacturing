import { Webhooks } from "../api/resources/webhooks/client/Client";
declare module "../api/resources/webhooks/client/Client" {
    namespace Webhooks {
        interface RequestSignatureDetails {
            /** The headers of the incoming webhook request as a record-like object */
            headers: Record<string, string>;
            /** The body of the incoming webhook request as a string */
            body: string;
            /** The secret key generated when creating the webhook or the OAuth client secret */
            secret: string;
        }
    }
}
export declare class Client extends Webhooks {
    constructor(_options: Webhooks.Options);
    /**
     * Verify that the signature on the webhook message is from Webflow
     * @link https://developers.webflow.com/data/docs/working-with-webhooks#validating-request-signatures
     *
     * @param {Webhooks.RequestSignatureDetails.headers} requestSignatureDetails - details of the incoming webhook request
     * @example
     *     function incomingWebhookRouteHandler(req, res) {
     *       const headers = req.headers;
     *       const body = JSON.stringify(req.body);
     *       const secret = getWebhookSecret(WEBHOOK_ID);
     *       const isAuthenticated = await client.webhooks.verifySignature({ headers, body, secret });
     *
     *       if (isAuthenticated) {
     *           // Process the webhook
     *       } else {
     *           // Alert the user that the webhook is not authenticated
     *       }
     *       res.sendStatus(200);
     *     }
     *
     */
    verifySignature({ headers, body, secret }: Webhooks.RequestSignatureDetails): Promise<boolean>;
}
