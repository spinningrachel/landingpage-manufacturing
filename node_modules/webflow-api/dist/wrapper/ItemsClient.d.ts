import * as Webflow from "../api";
import { Items } from "../api/resources/collections/resources/items/client/Client";
import * as core from "../core";
import * as SchemaOverrides from "./schemas";
declare module "../api/resources/collections/resources/items/client/Client" {
    namespace Items { }
}
export declare class Client extends Items {
    protected readonly _options: Items.Options;
    constructor(_options: Items.Options);
    /**
     * Create Item(s) in a Collection.
     *
     *
     * To create items across multiple locales, please use [this endpoint.](/data/reference/cms/collection-items/staged-items/create-items)
     *
     * Required scope | `CMS:write`
     *
     * @param {string} collectionId - Unique identifier for a Collection
     * @param {SchemaOverrides.ItemsCreateItemRequest} request
     * @param {Items.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.collections.items.createItem("580e63fc8c9a982ac9b8b745", {
     *         isArchived: false,
     *         isDraft: false,
     *         fieldData: {
     *             name: "Pan Galactic Gargle Blaster Recipe",
     *             slug: "pan-galactic-gargle-blaster"
     *         }
     *     })
     *
     * @example
     *     await client.collections.items.createItem("580e63fc8c9a982ac9b8b745", {
     *         items: [{
     *                     isArchived: false,
     *                     isDraft: false,
     *                     fieldData: {
     *                         name: "Senior Data Analyst",
     *                         slug: "senior-data-analyst"
     *                     }
     *                 }, {
     *                     isArchived: false,
     *                     isDraft: false,
     *                     fieldData: {
     *                         name: "Product Manager",
     *                         slug: "product-manager"
     *                     }
     *                 }]
     *     })
     */
    createItem(collectionId: string, request: SchemaOverrides.ItemsCreateItemRequest, requestOptions?: Items.RequestOptions): core.HttpResponsePromise<Webflow.CollectionItem>;
    private __createItemOverride;
    /**
     * Update a selected Item in a Collection.
     *
     * Required scope | `CMS:write`
     *
     * @param {string} collectionId - Unique identifier for a Collection
     * @param {string} itemId - Unique identifier for an Item
     * @param {SchemaOverrides.ItemsUpdateItemRequest} request
     * @param {Items.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.collections.items.updateItem("580e63fc8c9a982ac9b8b745", "580e64008c9a982ac9b8b754", {
     *             isArchived: false,
     *             isDraft: false,
     *             fieldData: {
     *                 name: "Pan Galactic Gargle Blaster Recipe",
     *                 slug: "pan-galactic-gargle-blaster"
     *             }
     *     })
     */
    updateItem(collectionId: string, itemId: string, request: SchemaOverrides.ItemsUpdateItemRequest, requestOptions?: Items.RequestOptions): core.HttpResponsePromise<Webflow.CollectionItem>;
    private __updateItemOverride;
    /**
     * Create item(s) in a collection that will be immediately published to the live site.
     *
     *
     * To create items across multiple locales, [please use this endpoint.](/data/reference/cms/collection-items/staged-items/create-items)
     *
     *
     * Required scope | `CMS:write`
     *
     * @param {string} collectionId - Unique identifier for a Collection
     * @param {Webflow.collections.ItemsCreateItemLiveRequest} request
     * @param {Items.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.collections.items.createItemLive("580e63fc8c9a982ac9b8b745", {
     *             isArchived: false,
     *             isDraft: false,
     *             fieldData: {
     *                 name: "Pan Galactic Gargle Blaster Recipe",
     *                 slug: "pan-galactic-gargle-blaster"
     *             }
     *     })
     *
     * @example
     *     await client.collections.items.createItemLive("580e63fc8c9a982ac9b8b745", {
     *             items: [{
     *                     isArchived: false,
     *                     isDraft: false,
     *                     fieldData: {
     *                         name: "Senior Data Analyst",
     *                         slug: "senior-data-analyst"
     *                     }
     *                 }, {
     *                     isArchived: false,
     *                     isDraft: false,
     *                     fieldData: {
     *                         name: "Product Manager",
     *                         slug: "product-manager"
     *                     }
     *                 }]
     *     })
     */
    createItemLive(collectionId: string, request: SchemaOverrides.ItemsCreateItemLiveRequest, requestOptions?: Items.RequestOptions): core.HttpResponsePromise<Webflow.CollectionItem>;
    private __createItemLiveOverride;
    /**
     * Update a selected live Item in a Collection. The updates for this Item will be published to the live site.
     *
     * Required scope | `CMS:write`
     *
     * @param {string} collectionId - Unique identifier for a Collection
     * @param {string} itemId - Unique identifier for an Item
     * @param {Webflow.collections.ItemsUpdateItemLiveRequest} request
     * @param {Items.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.ConflictError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.collections.items.updateItemLive("580e63fc8c9a982ac9b8b745", "580e64008c9a982ac9b8b754", {
     *             isArchived: false,
     *             isDraft: false,
     *             fieldData: {
     *                 name: "Pan Galactic Gargle Blaster Recipe",
     *                 slug: "pan-galactic-gargle-blaster"
     *             }
     *     })
     */
    updateItemLive(collectionId: string, itemId: string, request: SchemaOverrides.ItemsUpdateItemLiveRequest, requestOptions?: Items.RequestOptions): core.HttpResponsePromise<Webflow.CollectionItem>;
    private __updateItemLiveOverride;
}
