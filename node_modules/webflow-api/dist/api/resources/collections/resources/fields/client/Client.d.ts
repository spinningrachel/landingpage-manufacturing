/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as Webflow from "../../../../../index";
export declare namespace Fields {
    interface Options {
        environment?: core.Supplier<environments.WebflowEnvironment | environments.WebflowEnvironmentUrls>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        accessToken: core.Supplier<core.BearerToken>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class Fields {
    protected readonly _options: Fields.Options;
    constructor(_options: Fields.Options);
    /**
     * Create a custom field in a collection.
     *
     * Field validation is currently not available through the API.
     *
     * Bulk creation of fields is not supported with this endpoint. To add multiple fields at once, include them when you [create the collection.](/data/v2.0.0/reference/cms/collections/create)
     *
     * Required scope | `cms:write`
     *
     * @param {string} collectionId - Unique identifier for a Collection
     * @param {Webflow.FieldCreate} request
     * @param {Fields.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.ConflictError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.collections.fields.create("580e63fc8c9a982ac9b8b745", {
     *         id: "562ac0395358780a1f5e6fbc",
     *         isEditable: true,
     *         isRequired: false,
     *         type: "RichText",
     *         displayName: "Post Body",
     *         helpText: "Add the body of your post here"
     *     })
     *
     * @example
     *     await client.collections.fields.create("580e63fc8c9a982ac9b8b745", {
     *         id: "562ac0395358780a1f5e6fbc",
     *         isEditable: true,
     *         isRequired: false,
     *         type: "Option",
     *         displayName: "Post Type",
     *         helpText: "Add the body of your post here",
     *         metadata: {
     *             options: [{
     *                     name: "Feature"
     *                 }, {
     *                     name: "News"
     *                 }, {
     *                     name: "Product Highlight"
     *                 }]
     *         }
     *     })
     *
     * @example
     *     await client.collections.fields.create("580e63fc8c9a982ac9b8b745", {
     *         id: "562ac0395358780a1f5e6fbd",
     *         isEditable: true,
     *         isRequired: false,
     *         type: "Reference",
     *         displayName: "Author",
     *         helpText: "Add the post author here",
     *         metadata: {
     *             collectionId: "63692ab61fb2852f582ba8f5"
     *         }
     *     })
     */
    create(collectionId: string, request: Webflow.FieldCreate, requestOptions?: Fields.RequestOptions): core.HttpResponsePromise<Webflow.FieldCreate>;
    private __create;
    /**
     * Delete a custom field in a collection. This endpoint does not currently support bulk deletion.
     *
     * Required scope | `cms:write`
     *
     * @param {string} collectionId - Unique identifier for a Collection
     * @param {string} fieldId - Unique identifier for a Field in a collection
     * @param {Fields.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.collections.fields.delete("580e63fc8c9a982ac9b8b745", "580e63fc8c9a982ac9b8b745")
     */
    delete(collectionId: string, fieldId: string, requestOptions?: Fields.RequestOptions): core.HttpResponsePromise<void>;
    private __delete;
    /**
     * Update a custom field in a collection.
     *
     * Required scope | `cms:write`
     *
     * @param {string} collectionId - Unique identifier for a Collection
     * @param {string} fieldId - Unique identifier for a Field in a collection
     * @param {Webflow.collections.FieldUpdate} request
     * @param {Fields.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await client.collections.fields.update("580e63fc8c9a982ac9b8b745", "580e63fc8c9a982ac9b8b745", {
     *         isRequired: false,
     *         displayName: "Post Body",
     *         helpText: "Add the body of your post here"
     *     })
     */
    update(collectionId: string, fieldId: string, request?: Webflow.collections.FieldUpdate, requestOptions?: Fields.RequestOptions): core.HttpResponsePromise<Webflow.Field>;
    private __update;
    protected _getAuthorizationHeader(): Promise<string>;
}
